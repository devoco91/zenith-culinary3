import React from 'react';
import withQueryFeathers from './hoc/withQueryFeathers';
import withMutationFeathers from './hoc/withMutationFeathers';


class ExampleUpdateC extends React.Component {
  render() {
    const {update, entity} = this.props;
    return (
      <div> create
        <button
          onClick={() => update(entity._id, {
            ...entity,
            name: 'bshshssssss'
          })}
        >
          update entity
        </button>
      </div>
    )
  }
}

const ExampleUpdate = withMutationFeathers({
  service: 'traces',
  method: 'update',
  options: {},
})(ExampleUpdateC);


const ExampleOne = ({data}) => {
  console.log('ExampleOne data', data)
  return (
    <div> one {data.loaded && data.result.name}
      <div>{data.loading}</div>
      <div>{data.error}</div>
      <div>{data.items}</div>
      <div>{data.refetch}</div>

      <ExampleUpdate
        entity={data.result}
    />
    </div>
  )
}

export default withQueryFeathers({
  service: 'traces',
  method: 'get',
  id: '59f361c90914cc266f01ea89',
  params: {}, // variables
  skip: false,
  options: {},
})(ExampleOne);
